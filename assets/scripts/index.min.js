"use strict";const fieldMask=document.querySelectorAll("[data-mask]");function formattingData(t,a,e){const n=t.replace(/[^0-9]/g,"");var r=n.split("");let i=0,o="";for(let t=0;t<a.length;t++){var l=a[t];r[i]?/\*/.test(l)?(o+=r[i],i++):o+=l:e&&e.split("")[t]&&(o+=e.split("")[t])}return o}function format(t){var a=t.value,e=t.getAttribute("data-format"),n=t.getAttribute("data-mask"),r=formattingData(a,e);t.value=formattingData(a,e,n),t.setSelectionRange(r.length,r.length)}fieldMask.forEach(function(t){t.addEventListener("focus",function(){t.value="+7"}),t.addEventListener("input",function(){format(t)})});
!function(){const t=document.querySelector(".dropdown");function o(t,s){t.classList.toggle(s)}t.addEventListener("click",function(t){const s=t.target,e=this.querySelector("input");"INPUT"===t.target.nodeName&&(this.classList.contains("show"),o(this,"show")),s.classList.contains("dropdown-item")&&(t=s.value,e.value=t,0<e.value.length?this.classList.remove("show"):console.error("Нет значения!"))})}();
!function(){const t=$("form");t.each(function(){$(this).validate({ignore:[],rules:{form_data_name:{required:!0},form_data_email:{required:!0,email:!0},form_data_tel:{required:!0},form_data_po_name:{required:!0},form_data_po_type:{required:!0},form_data_application_text:{required:!0}},messages:{form_data_name:"Заполните поле",form_data_email:{required:"Заполните поле",email:"Адрес электронной почты должен быть в формате name@domain.com"},form_data_tel:"Заполните поле",form_data_po_name:"Заполните поле",form_data_po_type:"Заполните поле",form_data_application_text:"Заполните поле"},errorPlacement:function(e,a){a.parent().before(e)},highlight:function(e){$(e).closest(".form-group").addClass("has-error")},unhighlight:function(e){$(e).closest(".form-group").removeClass("has-error")},submitHandler:function(e,a){a.preventDefault(),$.ajax({type:e.method,url:e.action,data:$(e).serialize(),dataType:"json"}).done(function(e){t.find("input").not(":button, :submit, :reset, :hidden").val("").removeAttr("checked").removeAttr("selected"),t.find("textarea").val(""),alert(e.message)}).fail(function(e){alert(e.message)})}})})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
